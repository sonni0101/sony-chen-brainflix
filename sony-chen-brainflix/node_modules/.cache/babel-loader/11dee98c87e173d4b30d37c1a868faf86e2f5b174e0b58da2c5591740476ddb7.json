{"ast":null,"code":"var _jsxFileName = \"/Users/sonychen/Desktop/BrainStation HW/sony-chen-brainflix/sony-chen-brainflix/src/components/VideoPlayer/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport './VideoPlayer.scss';\nimport playIcon from '../../assets/icons/play.svg';\nimport pauseIcon from '../../assets/icons/pause.svg';\nimport volumeIcon from '../../assets/icons/volume_up.svg';\nimport fullscreenIcon from '../../assets/icons/fullscreen.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoLink,\n  duration\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const progressRef = useRef(null);\n  const volumeRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState('0:00');\n  const [totalDuration, setTotalDuration] = useState(duration);\n  useEffect(() => {\n    const video = videoRef.current;\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    video.addEventListener('loadedmetadata', handleLoadedMetadata);\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n      video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, []);\n  const togglePlayPause = () => {\n    const video = videoRef.current;\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    const video = videoRef.current;\n    const current = formatTime(video.currentTime);\n    setCurrentTime(current);\n    const progressPercent = video.currentTime / video.duration * 100;\n    progressRef.current.style.width = `${progressPercent}%`;\n  };\n  const handleLoadedMetadata = () => {\n    const video = videoRef.current;\n    setTotalDuration(formatTime(video.duration));\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  const handleVolumeChange = e => {\n    const video = videoRef.current;\n    video.volume = e.target.value;\n  };\n  const handleFullscreen = () => {\n    const video = videoRef.current;\n    if (video.requestFullscreen) {\n      video.requestFullscreen();\n    } else if (video.mozRequestFullScreen) {\n      // Firefox\n      video.mozRequestFullScreen();\n    } else if (video.webkitRequestFullscreen) {\n      // Chrome, Safari and Opera\n      video.webkitRequestFullscreen();\n    } else if (video.msRequestFullscreen) {\n      // IE/Edge\n      video.msRequestFullscreen();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"video-player\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player__section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"video-player__video\",\n        poster: videoLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__play\",\n          onClick: togglePlayPause,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isPlaying ? pauseIcon : playIcon,\n            alt: \"Play/Pause icon\",\n            className: \"video-player__icon brainflix_icon_sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__scrub\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-player__scrub-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: progressRef,\n              className: \"video-player__scrub-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"video-player__scrub-time\",\n            children: [currentTime, \" / \", totalDuration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-player__right-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fullscreenIcon,\n            alt: \"Fullscreen icon\",\n            className: \"video-player__icon brainflix_icon\",\n            onClick: handleFullscreen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            defaultValue: \"1\",\n            className: \"video-player__volume\",\n            onChange: handleVolumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: volumeIcon,\n            alt: \"Volume icon\",\n            className: \"video-player__icon brainflix_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoPlayer, \"y9yT8oOw96kObQzUpottPL8ME1s=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","playIcon","pauseIcon","volumeIcon","fullscreenIcon","jsxDEV","_jsxDEV","VideoPlayer","videoLink","duration","_s","videoRef","progressRef","volumeRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","totalDuration","setTotalDuration","video","current","addEventListener","handleTimeUpdate","handleLoadedMetadata","removeEventListener","togglePlayPause","pause","play","formatTime","progressPercent","style","width","time","minutes","Math","floor","seconds","handleVolumeChange","e","volume","target","value","handleFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","className","children","ref","poster","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","min","max","step","defaultValue","onChange","_c","$RefreshReg$"],"sources":["/Users/sonychen/Desktop/BrainStation HW/sony-chen-brainflix/sony-chen-brainflix/src/components/VideoPlayer/VideoPlayer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport './VideoPlayer.scss';\nimport playIcon from '../../assets/icons/play.svg';\nimport pauseIcon from '../../assets/icons/pause.svg';\nimport volumeIcon from '../../assets/icons/volume_up.svg';\nimport fullscreenIcon from '../../assets/icons/fullscreen.svg';\n\nfunction VideoPlayer({ videoLink, duration }) {\n    const videoRef = useRef(null);\n    const progressRef = useRef(null);\n    const volumeRef = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTime, setCurrentTime] = useState('0:00');\n    const [totalDuration, setTotalDuration] = useState(duration);\n\n    useEffect(() => {\n        const video = videoRef.current;\n        video.addEventListener('timeupdate', handleTimeUpdate);\n        video.addEventListener('loadedmetadata', handleLoadedMetadata);\n        return () => {\n            video.removeEventListener('timeupdate', handleTimeUpdate);\n            video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        };\n    }, []);\n\n    const togglePlayPause = () => {\n        const video = videoRef.current;\n        if (isPlaying) {\n            video.pause();\n        } else {\n            video.play();\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    const handleTimeUpdate = () => {\n        const video = videoRef.current;\n        const current = formatTime(video.currentTime);\n        setCurrentTime(current);\n\n        const progressPercent = (video.currentTime / video.duration) * 100;\n        progressRef.current.style.width = `${progressPercent}%`;\n    };\n\n    const handleLoadedMetadata = () => {\n        const video = videoRef.current;\n        setTotalDuration(formatTime(video.duration));\n    };\n\n    const formatTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60);\n        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n    };\n\n    const handleVolumeChange = (e) => {\n        const video = videoRef.current;\n        video.volume = e.target.value;\n    };\n\n    const handleFullscreen = () => {\n        const video = videoRef.current;\n        if (video.requestFullscreen) {\n            video.requestFullscreen();\n        } else if (video.mozRequestFullScreen) { // Firefox\n            video.mozRequestFullScreen();\n        } else if (video.webkitRequestFullscreen) { // Chrome, Safari and Opera\n            video.webkitRequestFullscreen();\n        } else if (video.msRequestFullscreen) { // IE/Edge\n            video.msRequestFullscreen();\n        }\n    };\n\n    return (\n        <section className=\"video-player\">\n            <div className=\"video-player__section-container\">\n                <video ref={videoRef} className=\"video-player__video\" poster={videoLink}></video>\n                <div className=\"video-player__controls\">\n                    <div className=\"video-player__play\" onClick={togglePlayPause}>\n                        <img src={isPlaying ? pauseIcon : playIcon} alt=\"Play/Pause icon\" className=\"video-player__icon brainflix_icon_sm\" />\n                    </div>\n\n                    <div className=\"video-player__scrub\">\n                        <div className=\"video-player__scrub-bar-container\">\n                            <div ref={progressRef} className=\"video-player__scrub-bar\"></div>\n                        </div>\n                        <span className=\"video-player__scrub-time\">{currentTime} / {totalDuration}</span>\n                    </div>\n\n                    <div className=\"video-player__right-control\">\n                        <img src={fullscreenIcon} alt=\"Fullscreen icon\" className=\"video-player__icon brainflix_icon\" onClick={handleFullscreen} />\n                        <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" defaultValue=\"1\" className=\"video-player__volume\" onChange={handleVolumeChange} />\n                        <img src={volumeIcon} alt=\"Volume icon\" className=\"video-player__icon brainflix_icon\" />\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}